code:add_path("../deps/esmpp34raw/ebin").



Config = fun() ->
[
    [
        {id, 0},
        {type, smsc},
        {system_id, "proxy"},
        {password, "test"},
        {host, all},
        {port, 12345},
        {allowed_modes, [tx, rx]},
        {outbind, [
                    {system_id, "ologin"},
                    {password, "opasssword"},
                    {host, "localhost"},
                    {port, 12346}
                  ]
        }
    ],
    [
        {id, 1},
        {type, esme},
        {system_id, "login"},
        {password, "passsword"},
        {host, "127.0.0.1"},
        {port, 43210},
        {allowed_modes, [tx, rx, trx]},
        {outbind, [
                    {system_id, "ologin1"},
                    {password, "opasssword1"},
                    {host, all},
                    {port, 43211}
                  ]
        }
    ]
]
end.
esmpp34:start(Config).




Config = fun() ->
[
    {
        connections,
        [
            [
                {id, 1},
                {type, server},
                {host, {all, 12345}}
            ],
            [
                {id, 2},
                {type, client},
                {host, {"192.168.0.1", 23456}}
            ]
        ]
    },
    {
        directions,
        [
            [
                {id, 1},
                {mode, transceiver},
                {connections, 
                    [
                        {2, {"l2", "p2"}}
                    ]
                }
            ],
            [
                {id, 2},
                {mode, transceiver},
                {connections, 
                    [
                        {1, [{"l", "p"}, {"proxy", "test"}]}
                    ]
                }
            ]
        ]
    }
]
end.
esmpp34:start(Config).


rr("../include/esmpp34.hrl").
Connection = #connection{id = 2, type = server, host = {all, 12345}}.
esmpp34_connection_sup:start_connection(Connection).


esmpp34:start(Config).
esmpp34_server:start_link(Connection).












code:add_path("../deps/esmpp34raw/ebin").
rr("../include/esmpp34.hrl").
rr("../deps/esmpp34raw/include/esmpp34raw_types.hrl").
Config = fun() ->
[
    [
        {id, 0},
        {type, smsc},
        {system_id, "proxy"},
        {password, "test"},
        {host, all},
        {port, 4776},
        {allowed_modes, [trx]}
    ]
]
end.
esmpp34:start(Config).
DirectionId = 0.
Sender = fun(#pdu{sequence_number = Seq, body = #submit_sm{}}) -> io:format("Received seq~p~n", [Seq]), esmpp34:send_data(DirectionId, #submit_sm_resp{message_id = "123"}, Seq) end.
Responser = fun({ok, List}) -> lists:foreach(Sender, List) end.
Loop = fun(F) -> Responser(esmpp34:get_data(DirectionId)), F(F) end.
Loop(Loop).